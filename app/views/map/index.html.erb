<div id="top_map">
<table width="100%" cellspacing="5" style="margin: 5px 0px;"><tbody><tr>
	<td width="30%"><b>ATMapper</b><br/> マップ登録</td>
</tr></tbody></table>

<div style="width:600px;">
<form>
	<table><tbody><tr>
		<td style="width:500px;"><input type="text" value="" placeholder="例）場所・駅など" class="form-control" id="address"></td>
		<td><button class="btn btn-small btn-primary" type="button" id="button">地図検索</button></td>
	</tr></tbody></table>
</form>
</div>
<script>

var button = document.getElementById("button");
button.onclick = function() {
  var address = document.getElementById("address").value;
  codeAddress(address);
}
</script>

<script src="http://maps.googleapis.com/maps/api/js?&sensor=false"></script>
<div id="map-canvas" style="width:600px;height:600px;"></div>
</div>
<div id="top_map_middle">
<div style="width:600px;height:600px;">

<form action="/map/create" accept-charset="UTF-8" method="post" name="mapdetail" style="display:none;">
	<%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  	<input type="hidden" name="lat" id="lat" value=""/>
  	<input type="hidden" name="lgn" id="lgn" value=""/>
  	ATM名：<input type="text" name="mapname" id="mapname" class="form-control" placeholder="ATM名" />
	ATM種：<select  class="form-control">
  		<option>みずほ</option>
  		<option>三菱東京UFJ</option>
  		<option>三井住友</option>
  		<option>セブン銀行</option>
	</select>
	<button class="btn btn-large btn-block btn-primary" type="button" onclick="form.submit();mapnonedetailform()">登録する</button><a href="javascript:void(0);" onclick="mapnonedetailform();">戻る</a>
</form>
		<button class="btn btn-large btn-block btn-primary" id="beforebtn" type="button" onclick="mapdetailform()">画面中央にピンを打つ</button>
</div>
</div>
<hr>
ATMapperとは？<br/>
ATMをマップする<br/>
ATMを探す<br/>
利用規約<br/>
お知らせ<br/>
運営ブログ<br/>

<script type="text/javascript">
var before_title ="";
//キャンパスの要素を取得する
var canvas = document.getElementById( "map-canvas" );

//中心の位置座標を指定する
var latlng = new google.maps.LatLng( 35.792621 , 139.806513 );

//地図のオプションを設定する
var mapOptions = {
	zoom: 15 ,				//ズーム値
	center: latlng ,		
		 mapTypeId: google.maps.MapTypeId.ROADMAP
};

//[canvas]に、[mapOptions]の内容の、地図のインスタンス([map])を作成する
var map = new google.maps.Map( canvas , mapOptions );
	var latlng = map.getCenter();
	var lat = latlng.lat();
	var lng = latlng.lng();
	$("#lat").val(lat);
	$("#lgn").val(lng);
var cross_marker=null;
google.maps.event.addListener(map, 'dragend', function() {
	var latlng = map.getCenter();
	var lat = latlng.lat();
	var lng = latlng.lng();
	$("#lat").val(lat);
	$("#lgn").val(lng);
});
document.getElementById("map-canvas").addEventListener("click",function(e){
	makerclick(map,e)
},false);
function makerclick(map,e){
	if(document.getElementsByClassName('gm-style-iw')[0] == void 0
		|| document.getElementsByClassName('gm-style-iw')[0].innerText == "" ){
	}
	setTimeout(function(){
		title = document.getElementsByClassName('gm-title')[0]
		if(title != void 0
			&& title.innerText != ""
			&& title.innerHTML != before_title) {
			$("#mapname").val(title.innerHTML);
			var map_hi = $("#map-canvas").height() / 2;
			var map_wa = $("#map-canvas").width() / 2;
			var rect = e.target.getBoundingClientRect();
            var movex = (e.clientX - rect.left) - map_hi;
            var movey = (e.clientY - rect.top) - map_wa;
			map.panBy(movex, movey);
			before_title = title.innerText;
		}
		addr = document.getElementsByClassName('gm-addr')[0]
		if(addr != void 0) {
			$("#memo").val(addr.innerHTML);
		}	
	}, 500);
}
function codeAddress(address) {
  var geocoder = new google.maps.Geocoder();

  var mapOptions = {
    zoom: 18,
    scrollwheel: false,
     mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  // 地図を表示させるインスタンスを生成
  var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);


  // geocoder.geocode()メソッドを実行 
  geocoder.geocode( { 'address': address}, function(results, status) {

    // ジオコーディングが成功した場合
    if (status == google.maps.GeocoderStatus.OK) {
    map.setCenter(results[0].geometry.location);
	var latlng = map.getCenter();
	var lat = latlng.lat();
	var lng = latlng.lng();
	$("#lat").val(lat);
	$("#lgn").val(lng);

var cross_marker=null;
google.maps.event.addListener(map, 'dragend', function() {
	var latlng = map.getCenter();
	var lat = latlng.lat();
	var lng = latlng.lng();
	$("#lat").val(lat);
	$("#lgn").val(lng);
});
	google.maps.event.addListener(map, 'click', function(event) {
    	placeMarker(map, event.latLng);
  	});

    } else {
      console.log('Geocode was not successful for the following reason: ' + status);
    }
  });
}
function mapdetailform() {
	document.mapdetail.style.display = 'block';
	$("#beforebtn").hide();
}
function mapnonedetailform() {
	document.mapdetail.style.display = 'none';
	$("#beforebtn").show();
}
function placeMarker(map,location) {
    var clickedLocation = new google.maps.LatLng(location);
    var marker = new google.maps.Marker({
        position: location
        , map: map
    });
    // マーカーにタイトル(ツールチップ)を追加する
    marker.setTitle('テスト');
    // 吹き出しの設定
    var infowindow = new google.maps.InfoWindow({
        content: 'クリックされたのはここです<br>緯度:'
                + location.lat()
                + '<br>経度'
                +   location.lng()
        , size: new google.maps.Size(50,50)
    });
    // 吹き出しの表示
    infowindow.open(map, marker);
    // クリックした箇所をセンターに移動させる
    map.setCenter(location);
}
</script>
