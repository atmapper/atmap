<div id="top_map_middle">
	<h1 onclick="document.location.href='/'">ATMap</h1>
<div class="top_map_middle_block">
	<div style="padding:10px 20px;border:1px solid LightGrey;background-color:#F0F8FF;border 1px solid #87CEEB;border-radius: 5px;-webkit-border-radius: 5px;-moz-border-radius: 5px;">
		<table style="margin: 0 auto;"><tbody><tr><td>
			<button type="button" class="btn btn-default">現在地付近のATMを検索する</button>
		</td><td style="padding: 0 0 0 10px;">
			<div class="input-group">
				<input type="text" name="keyword" id="keyword" class="form-control" placeholder="キーワード検索">
				<span class="input-group-btn">
					<button type="button" class="btn btn-default" id="button">検索</button>
				</span>
			</div>
		</td></tr></tbody></table>
	</div>
</div>

<script>
var button = document.getElementById("button");
button.onclick = function() {
  var address = document.getElementById("keyword").value;
  codeAddress(address);
}
</script>

<div class="top_map_buttom_block">
<script src="http://maps.googleapis.com/maps/api/js?&sensor=false&libraries=places"></script>
<div id="map-canvas" style="width:100%;height:400px;"></div>
</div>
<div id="top_map_middle">
<div style="width:600px;">
	<%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  	<input type="hidden" name="lat" id="lat" value=""/>
  	<input type="hidden" name="lgn" id="lgn" value=""/>
	<div class="input-group">
		<span class="input-group-addon">ATM名</span>
	  	<input type="text" name="mapname" id="mapname" class="form-control" placeholder="最大100文字" />
	</div>
	<div class="input-group">
		<span class="input-group-addon">メ　モ</span>
	  	<input type="text" name="memo" id="memo" class="form-control" placeholder="最大255文字" />
	</div>
	<select  class="form-control" name="kind" id="kind">
  		<option value="1">みずほ</option>
  		<option value="2">三井住友</option>
  		<option value="3">三菱東京UFJ</option>
  		<option value="4">セブン銀行</option>
	</select>
	<button class="btn btn-large btn-block btn-primary" type="button" onclick="regist_map();">登録する</button>
</div>
</div>

<script type="text/javascript">
var before_title ="";
//キャンパスの要素を取得する
var canvas = document.getElementById( "map-canvas" );
var markersArray = [];
var crossSize = 19;
//中心の位置座標を指定する
var map;

// //地図のオプションを設定する
// var mapOptions = {
// 	zoom: 15 ,				//ズーム値
// 	center: latlng,
// 	scrollwheel: false,
// 	mapTypeControlOptions: { mapTypeIds: ['sample', google.maps.MapTypeId.ROADMAP] }
// };

// 	map = new google.maps.Map( canvas , mapOptions );
// 	var latlng = map.getCenter();
// 	var lat = latlng.lat();
// 	var lng = latlng.lng();
// 	$("#lat").val(lat);
// 	$("#lgn").val(lng);
codeAddress('<%= @keyword %>');
createCenterMaker();

/**************************************************************************/
	function CrossControl( controlDiv, map )
	/*
	* センターマーカーオブジェクト
	***************************************************************************/
	{

		var mapDiv = map.getDiv();

		// 縦のライン
		var controlCrossV = document.createElement('DIV');
		controlCrossV.style.position = 'absolute'
		controlCrossV.style.borderStyle = 'none none none solid';
		controlCrossV.style.borderWidth = '1px';
		controlCrossV.style.borderColor = 'red';
		controlCrossV.style.height = crossSize + 'px';
		controlCrossV.style.marginTop   = (( mapDiv.offsetHeight - crossSize + 1) / 2) + 'px';
		controlDiv.appendChild( controlCrossV );

		// 横のライン
		var controlCrossH = document.createElement('DIV');
		controlCrossH.style.position = 'absolute'
		controlCrossH.style.borderStyle = 'solid none none none';
		controlCrossH.style.borderWidth = '1px';
		controlCrossH.style.borderColor = 'red';
		controlCrossH.style.width = crossSize + 'px';
		controlCrossH.style.marginTop =  mapDiv.offsetHeight / 2 + 'px';
		controlCrossH.style.marginLeft = (( crossSize - 1 ) / -2) + 'px';
		controlDiv.appendChild( controlCrossH );
	}

	/**************************************************************************/
	function createCenterMaker()
	/*
	* センターマーカー作成
	***************************************************************************/
	{
		var CrossControlDiv = document.createElement('DIV');
		var crossControl = new CrossControl( CrossControlDiv, map );

		CrossControlDiv.index = 1;
		map.controls[google.maps.ControlPosition.TOP].push( CrossControlDiv );
	}



function codeAddress(address) {
	if(address == '') {
		address = '皇居';
	}
  var geocoder = new google.maps.Geocoder();

  var mapOptions = {
    zoom: 18,
    scrollwheel: false,
     mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
  geocoder.geocode( { 'address': address}, function(results, status) {

    // ジオコーディングが成功した場合
    if (status == google.maps.GeocoderStatus.OK) {
    map.setCenter(results[0].geometry.location);
	var latlng = map.getCenter();
	var lat = latlng.lat();
	var lng = latlng.lng();
	$("#lat").val(lat);
	$("#lgn").val(lng);
	createCenterMaker();

	google.maps.event.addListener(map, 'dragend', function() {
		var latlng = map.getCenter();
		var lat = latlng.lat();
		var lng = latlng.lng();
		$("#lat").val(lat);
		$("#lgn").val(lng);
	});
	google.maps.event.addListener(map, 'idle', function() {
		var latlng = map.getCenter();
		var lat = latlng.lat();
		var lng = latlng.lng();
		$("#lat").val(lat);
		$("#lgn").val(lng);
		dispLatLng();
	});

    } else {
      console.log('Geocode was not successful for the following reason: ' + status);
    }
  });
}
function dispLatLng(){
var latlngBounds = map.getBounds();
var swLatlng = latlngBounds.getSouthWest();
var swlat = swLatlng.lat();
var swlng = swLatlng.lng();

var neLatlng = latlngBounds.getNorthEast();
var nelat = neLatlng.lat();
var nelng = neLatlng.lng();
ajaxrequest(null, "get", '/map/list?swlat=' + swlat + '&swlng=' + swlng + '&nelat=' + nelat + '&nelng=' + nelng,
	function(j_data){
		update_maker(j_data);
	},
	function(j_data){
		alert("aasorry, this system is busy. Please try again later.")
	});
}

function ajaxrequest(data,type,url,successcb,errorcb){
    $.ajax({
      type: type,
      url: url,
      headers:{'X-CSRF-Token': $('#authenticity_token').val()},
      contentType: 'application/json',
      dataType: 'json',
      data:data,
      success: function(j_data){
        successcb(j_data);
      },
      error: function(j_data){
          errorcb(j_data);
      }
    });

}
function update_maker(json) {
var markers = new Array(); 
    for(i=0;i<json.length;i++){
    	if (json[i]['kind'] == null) {
			markers[i] = new google.maps.Marker({
	   		position: new google.maps.LatLng(
	   			json[i]['lat'],
	   			json[i]['lgn']),
	   			map: map
	   		});
    	} else {
			markers[i] = new google.maps.Marker({
	   		position: new google.maps.LatLng(
	   			json[i]['lat'],
	   			json[i]['lgn']),
	   			map: map,
	   			icon: "/assets/"+ json[i]['kind'] +".png"
	   		});    		
    	}
	   	onMarkerClick(markers[i], json[i]);
 	}
}
var myInfoWindow_open = null;
function onMarkerClick(marker, info){
    google.maps.event.addListener(
        marker
    ,   'click'
    ,   function(event){
    		if(myInfoWindow_open) {
    			myInfoWindow_open.close();
    		}
	    	var myInfoWindow = new google.maps.InfoWindow({
		    	content: '<div style="width:300px;">'
		    	+ '<b>' + info["mapname"] + '</b><br/>'
		    	+ info['memo']
		    	+ '<br clear="both" /><br/><br/>'
		    	+ '<img src="/assets/sign-post.png" height="36" width="36" onclick="route_set(' + info['lat'] + ',' + info['lgn'] + ')"; >　　'
		    	+ '<img src="/assets/comment.png" height="36" width="36" onclick=alert("test"); >　　'
		    	+ '<img src="/assets/clip.png" height="36" width="36" onclick=clip_set(' + info['id'] + '); >'
		    	+ '</div>'
	  		});
	  		myInfoWindow.open(map, marker);
	  		myInfoWindow_open = myInfoWindow;
        }
    );
}
function route_set(lat, lgn) {
	new google.maps.DirectionsService().route({
        origin: "皇居", 
        destination: new google.maps.LatLng(lat,lgn),
        travelMode: google.maps.DirectionsTravelMode.WALKING
    },function(result, status){
    	if (status == google.maps.DirectionsStatus.OK) {
      		new google.maps.DirectionsRenderer({map: map}).setDirections(result);
    	}
    });
}
function clip_set(mapid) {
	var data = $.toJSON({
		id : mapid
	});
	ajaxrequest(data,"post","/map/clip",
	function(j_data){
	},
	function(j_data){
		if(j_data.status == 401){
		alert("クリップを利用するにはログインしてください");
		} else {
		alert("sorry, this system is busy. Please try again later.")			
		}
	});
}
function regist_map() {
	var data = $.toJSON({
		lat : document.getElementById("lat").value,
		lgn : document.getElementById("lgn").value,
		kind : document.getElementById("kind").value,
		memo : document.getElementById("memo").value,
		mapname :document.getElementById("mapname").value 
	});
	ajaxrequest(data,"post","/map/create",
	function(j_data){
		dispLatLng();
		document.getElementById("memo").value　= '';
		document.getElementById("mapname").value　= '';
	},
	function(j_data){
		alert("sorry, this system is busy. Please try again later.")
	});
}
</script>
